<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mr.zxy.easypoi.mapper.EasyPoiEntityMapper" >
  <resultMap id="BaseResultMap" type="com.mr.zxy.easypoi.entity.EasyPoiEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="phone" property="phone" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, sex, birthday, phone
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_easypoi
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_easypoi
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_easypoi
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mr.zxy.easypoi.entity.EasyPoiEntity" >
    insert into t_easypoi (id, name, sex, 
      birthday, phone)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{birthday,jdbcType=DATE}, #{phone,jdbcType=INTEGER})
  </insert>

  <insert id="save" parameterType="java.util.List" >
    insert into t_easypoi (id, name, sex,
      birthday, phone)
    values
    <foreach collection="list" index="index" separator="," item="item">
      (#{item.id,jdbcType=INTEGER}, #{item.name,jdbcType=VARCHAR}, #{item.sex,jdbcType=INTEGER},
      #{item.birthday,jdbcType=DATE}, #{item.phone,jdbcType=INTEGER})
    </foreach>

  </insert>

  <insert id="insertSelective" parameterType="com.mr.zxy.easypoi.entity.EasyPoiEntity" >
    insert into t_easypoi
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="phone != null" >
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mr.zxy.easypoi.entity.EasyPoiEntity" >
    update t_easypoi
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mr.zxy.easypoi.entity.EasyPoiEntity" >
    update t_easypoi
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      phone = #{phone,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>